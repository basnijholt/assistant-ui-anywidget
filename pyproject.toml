[project]
name = "assistant-ui-widget"
version = "0.1.0"
description = "Interactive chat widget using Assistant-UI and AnyWidget for Jupyter notebooks"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Assistant UI Team", email = "assistant@example.com"}
]
maintainers = [
    {name = "Assistant UI Team", email = "assistant@example.com"}
]
keywords = ["jupyter", "widget", "chat", "assistant", "ui", "react", "anywidget"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Jupyter",
    "Framework :: Jupyter :: JupyterLab :: 3",
    "Framework :: Jupyter :: JupyterLab :: 4",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: User Interfaces",
    "Topic :: System :: Shells",
]
dependencies = [
    "anywidget>=0.9.0",
    "traitlets>=5.0.0",
    "jupyter>=1.0.0",
    "ipywidgets>=8.0.0",
]

requires-python = ">=3.10"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
include = [
    "assistant_ui_anywidget/**/*.py",
    "frontend/dist/**/*"
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["assistant_ui_anywidget"]

[project.urls]
Homepage = "https://github.com/your-org/assistant-ui-anywidget"
Repository = "https://github.com/your-org/assistant-ui-anywidget.git"
Documentation = "https://github.com/your-org/assistant-ui-anywidget#readme"
Issues = "https://github.com/your-org/assistant-ui-anywidget/issues"
Changelog = "https://github.com/your-org/assistant-ui-anywidget/releases"

[project.optional-dependencies]
ai = [
    "langchain>=0.1.0",
    "langchain-openai>=0.0.5",
    # Using custom branch until PR is merged: https://github.com/langchain-ai/langchain-google/pull/1056
    # Fixes Gemini API issue with AIMessage + tool_calls in conversation history
    "langchain-google-genai @ git+https://github.com/basnijholt/langchain-google.git@fix/gemini-aimessage-tool-calls-conversation-history#subdirectory=libs/genai",
    "langchain-anthropic>=0.1.0",
    "langgraph>=0.0.20",
    "openai>=1.0.0",
    "python-dotenv>=1.0.0",
]
dev = [
    "notebook>=7.3.3",
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "pre-commit>=3.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]
test = [
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "pytest-xdist>=3.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]

[dependency-groups]
dev = [
    "coverage[toml]>=7.9.2",
    "notebook>=7.3.3",
    "numpy>=2.2.6",
    "pandas>=2.3.1",
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=assistant_ui_anywidget",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=70",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["assistant_ui_anywidget", "."]
omit = [
    "tests/*",
    "test_*",
    "*/__pycache__/*",
    "frontend/*",
    ".venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
